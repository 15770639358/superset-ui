(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{2484:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/translation/TranslatorSingleton.ts + 1 modules\nvar TranslatorSingleton = __webpack_require__(13);\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/node_modules/@vx/zoom/esm/Zoom.js + 6 modules\nvar Zoom = __webpack_require__(2474);\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/plugins/plugin-chart-choropleth-map/node_modules/@vx/event/esm/localPoint.js + 4 modules\nvar localPoint = __webpack_require__(2479);\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/node_modules/@vx/clip-path/esm/clip-paths/RectClipPath.js + 1 modules\nvar RectClipPath = __webpack_require__(2503);\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/plugins/plugin-chart-choropleth-map/node_modules/@vx/tooltip/esm/enhancers/withTooltip.js + 1 modules\nvar withTooltip = __webpack_require__(2504);\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/node_modules/lodash/lodash.js\nvar lodash = __webpack_require__(112);\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/node_modules/d3-geo/src/path/index.js + 5 modules\nvar src_path = __webpack_require__(2476);\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/plugins/plugin-chart-choropleth-map/src/chart/loadMap.ts + 2 modules\nvar loadMap = __webpack_require__(1076);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/style/index.ts\nvar style = __webpack_require__(442);\n\n// CONCATENATED MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/plugins/plugin-chart-choropleth-map/src/chart/components.ts\n\nconst PADDING = style["e" /* supersetTheme */].gridUnit * 4;\nconst RelativeDiv = style["d" /* styled */].div `\n  position: relative;\n`;\nconst ZoomControls = style["d" /* styled */].div `\n  position: absolute;\n  top: ${PADDING}px;\n  right: ${PADDING}px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\nconst MiniMapControl = style["d" /* styled */].div `\n  position: absolute;\n  bottom: ${PADDING + 6}px;\n  right: ${PADDING + 1}px;\n`;\nconst IconButton = style["d" /* styled */].button `\n  width: ${({ theme }) => theme.gridUnit * 6}px;\n  font-size: ${({ theme }) => theme.typography.sizes.xl}px;\n  text-align: center;\n  color: #222;\n  margin: 0px;\n  margin-bottom: 2px;\n  background: #f5f8fb;\n  padding: 0px ${({ theme }) => theme.gridUnit}px;\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: none;\n`;\nconst TextButton = style["d" /* styled */].button `\n  text-align: center;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: #222;\n  margin: 0px;\n  background: #f5f8fb;\n  padding: ${({ theme }) => theme.gridUnit / 2}px ${({ theme }) => theme.gridUnit * 1.5}px;\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: none;\n`;\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/node_modules/encodable/esm/encoders/createEncoderFactory.js + 52 modules\nvar createEncoderFactory = __webpack_require__(2465);\n\n// CONCATENATED MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/plugins/plugin-chart-choropleth-map/src/chart/Encoder.ts\n\nconst DefaultChannelOutputs = {\n    key: \'\',\n    fill: \'#f0f0f0\',\n    opacity: 1,\n    stroke: \'#ccc\',\n    strokeWidth: 1,\n};\nconst choroplethMapEncoderFactory = Object(createEncoderFactory["a" /* default */])({\n    channelTypes: {\n        key: \'Text\',\n        fill: \'Color\',\n        opacity: \'Numeric\',\n        stroke: \'Color\',\n        strokeWidth: \'Numeric\',\n        tooltip: \'Text\',\n    },\n    defaultEncoding: {\n        key: { field: \'key\', title: \'Location\' },\n        fill: { value: DefaultChannelOutputs.fill },\n        opacity: { value: DefaultChannelOutputs.opacity },\n        stroke: { value: DefaultChannelOutputs.stroke },\n        strokeWidth: { value: DefaultChannelOutputs.strokeWidth },\n        tooltip: [],\n    },\n});\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/node_modules/encodable/esm/typeGuards/CompleteChannelDef.js\nvar CompleteChannelDef = __webpack_require__(2404);\n\n// EXTERNAL MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/plugins/plugin-chart-choropleth-map/node_modules/@vx/tooltip/esm/tooltips/Tooltip.js\nvar Tooltip = __webpack_require__(2457);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/chart-composition/tooltip/TooltipFrame.tsx\nvar TooltipFrame = __webpack_require__(1024);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/chart-composition/tooltip/TooltipTable.tsx\nvar TooltipTable = __webpack_require__(1025);\n\n// CONCATENATED MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/plugins/plugin-chart-choropleth-map/src/chart/MapTooltip.tsx\n\n\n\n\n\nfunction MapTooltip({ encoder, left, top, tooltipData }) {\n    if (!tooltipData) {\n        return null;\n    }\n    const { channels } = encoder;\n    const { key, fill, stroke, strokeWidth, opacity, tooltip } = channels;\n    const { datum } = tooltipData;\n    const tooltipRows = [\n        { key: \'key\', keyColumn: key.getTitle(), valueColumn: key.formatDatum(datum) },\n    ];\n    [fill, stroke, opacity, strokeWidth].forEach(channel => {\n        if (Object(CompleteChannelDef["a" /* isCompleteFieldDef */])(channel.definition)) {\n            tooltipRows.push({\n                key: channel.name,\n                keyColumn: channel.getTitle(),\n                valueColumn: channel.formatDatum(datum),\n            });\n        }\n    });\n    tooltip.forEach(g => {\n        tooltipRows.push({\n            key: `${g.name}`,\n            keyColumn: g.getTitle(),\n            valueColumn: g.formatDatum(datum),\n        });\n    });\n    return (react_default.a.createElement(Tooltip["a" /* default */], { top: top, left: left },\n        react_default.a.createElement(TooltipFrame["a" /* default */], null,\n            react_default.a.createElement(TooltipTable["a" /* default */], { data: Object(lodash["uniqBy"])(tooltipRows, row => row.keyColumn) }))));\n}\n\n// CONCATENATED MODULE: /Users/erik_ritter/repos/github.com/apache-superset/superset-ui/plugins/plugin-chart-choropleth-map/src/chart/ChoroplethMap.tsx\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * "License"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\nconst INITIAL_TRANSFORM = {\n    scaleX: 1,\n    scaleY: 1,\n    translateX: 0,\n    translateY: 0,\n    skewX: 0,\n    skewY: 0,\n};\nconst defaultProps = {\n    data: [],\n    encoding: {},\n    map: \'world\',\n};\nconst missingItem = DefaultChannelOutputs;\nclass ChoroplethMap_ChoroplethMap extends react_default.a.PureComponent {\n    constructor(props) {\n        super(props);\n        this.createEncoder = choroplethMapEncoderFactory.createSelector();\n        this.handleMouseOver = (event, datum) => {\n            const coords = Object(localPoint["a" /* default */])(event);\n            this.props.showTooltip({\n                tooltipLeft: coords === null || coords === void 0 ? void 0 : coords.x,\n                tooltipTop: coords === null || coords === void 0 ? void 0 : coords.y,\n                tooltipData: datum,\n            });\n        };\n        this.toggleMiniMap = () => {\n            const { showMiniMap } = this.state;\n            this.setState({\n                showMiniMap: !showMiniMap,\n            });\n        };\n        this.state = {\n            mapData: {},\n            mapShape: undefined,\n            showMiniMap: true,\n        };\n    }\n    componentDidMount() {\n        this.loadMap();\n        this.processData();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.map !== this.props.map) {\n            this.loadMap();\n        }\n        if (prevProps.data !== this.props.data || prevProps.encoding !== this.props.encoding) {\n            this.processData();\n        }\n    }\n    processData() {\n        const { data, encoding } = this.props;\n        const encoder = this.createEncoder(encoding);\n        const { key, fill, opacity, stroke, strokeWidth } = encoder.channels;\n        encoder.setDomainFromDataset(data);\n        const mapData = Object(lodash["keyBy"])(data.map(d => ({\n            key: key.getValueFromDatum(d, DefaultChannelOutputs.key),\n            fill: fill.encodeDatum(d, DefaultChannelOutputs.fill),\n            opacity: opacity.encodeDatum(d, DefaultChannelOutputs.opacity),\n            stroke: stroke.encodeDatum(d, DefaultChannelOutputs.stroke),\n            strokeWidth: strokeWidth.encodeDatum(d, DefaultChannelOutputs.strokeWidth),\n            datum: d,\n        })), d => d.key);\n        this.setState({ mapData });\n    }\n    loadMap() {\n        const { map } = this.props;\n        this.setState({ mapShape: undefined });\n        Object(loadMap["a" /* default */])(map).then(mapShape => {\n            this.setState({ mapShape });\n        });\n    }\n    renderMap() {\n        const { height, width, hideTooltip } = this.props;\n        const { mapShape, mapData } = this.state;\n        if (typeof mapShape !== \'undefined\') {\n            const { metadata, object } = mapShape;\n            const { keyAccessor } = metadata;\n            const projection = metadata.createProjection().fitExtent([\n                [PADDING, PADDING],\n                [width - PADDING * 2, height - PADDING * 2],\n            ], object);\n            const path = Object(src_path["a" /* default */])().projection(projection);\n            return object.features.map(f => {\n                const key = keyAccessor(f);\n                const encodedDatum = mapData[key] || missingItem;\n                const { stroke, fill, strokeWidth, opacity } = encodedDatum;\n                return (\n                // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n                react_default.a.createElement("path", { key: key, vectorEffect: "non-scaling-stroke", stroke: stroke, strokeWidth: strokeWidth, fill: fill, opacity: opacity, d: path(f) || \'\', onMouseOver: event => this.handleMouseOver(event, encodedDatum), onMouseMove: event => this.handleMouseOver(event, encodedDatum), onMouseOut: hideTooltip, onBlur: hideTooltip }));\n            });\n        }\n        return null;\n    }\n    render() {\n        const { height, width, encoding, tooltipOpen, tooltipLeft, tooltipTop, tooltipData, } = this.props;\n        const { showMiniMap } = this.state;\n        const encoder = this.createEncoder(encoding);\n        const renderedMap = this.renderMap();\n        const miniMapTransform = `translate(${(width * 3) / 4 - PADDING}, ${(height * 3) / 4 - PADDING}) scale(0.25)`;\n        return (react_default.a.createElement(react_default.a.Fragment, null,\n            react_default.a.createElement(Zoom["a" /* default */], { style: { width, height }, width: width, height: height, scaleXMin: 0.75, scaleXMax: 8, scaleYMin: 0.75, scaleYMax: 8, transformMatrix: INITIAL_TRANSFORM }, zoom => (react_default.a.createElement(RelativeDiv, null,\n                react_default.a.createElement("svg", { width: width, height: height, style: { cursor: zoom.isDragging ? \'grabbing\' : \'grab\' } },\n                    react_default.a.createElement(RectClipPath["a" /* default */], { id: "zoom-clip", width: width, height: height }),\n                    react_default.a.createElement("g", { onWheel: zoom.handleWheel, \n                        // eslint-disable-next-line react/jsx-handler-names\n                        onMouseDown: zoom.dragStart, \n                        // eslint-disable-next-line react/jsx-handler-names\n                        onMouseMove: zoom.dragMove, \n                        // eslint-disable-next-line react/jsx-handler-names\n                        onMouseUp: zoom.dragEnd, onMouseLeave: () => {\n                            if (!zoom.isDragging)\n                                return;\n                            zoom.dragEnd();\n                        }, onDoubleClick: event => {\n                            const point = Object(localPoint["a" /* default */])(event) || undefined;\n                            zoom.scale({ scaleX: 1.1, scaleY: 1.1, point });\n                        } },\n                        react_default.a.createElement("rect", { width: width, height: height, fill: "transparent" }),\n                        react_default.a.createElement("g", { transform: zoom.toString() }, renderedMap)),\n                    showMiniMap && (react_default.a.createElement("g", { clipPath: "url(#zoom-clip)", transform: miniMapTransform },\n                        react_default.a.createElement("rect", { width: width, height: height, fill: "#fff", stroke: "#999" }),\n                        renderedMap,\n                        react_default.a.createElement("rect", { width: width, height: height, fill: "white", fillOpacity: 0.2, stroke: "#999", strokeWidth: 4, transform: zoom.toStringInvert() })))),\n                react_default.a.createElement(ZoomControls, null,\n                    react_default.a.createElement(IconButton, { type: "button", onClick: () => zoom.scale({ scaleX: 1.2, scaleY: 1.2 }) }, "+"),\n                    react_default.a.createElement(IconButton, { type: "button", onClick: () => zoom.scale({ scaleX: 0.8, scaleY: 0.8 }) }, "-"),\n                    react_default.a.createElement(TextButton, { type: "button", \n                        // eslint-disable-next-line react/jsx-handler-names\n                        onClick: zoom.clear }, "Reset")),\n                react_default.a.createElement(MiniMapControl, null,\n                    react_default.a.createElement(TextButton, { type: "button", \n                        // eslint-disable-next-line react/jsx-handler-names\n                        onClick: this.toggleMiniMap }, showMiniMap ? Object(TranslatorSingleton["e" /* t */])(\'Hide Mini Map\') : Object(TranslatorSingleton["e" /* t */])(\'Show Mini Map\')))))),\n            tooltipOpen && (react_default.a.createElement(MapTooltip, { encoder: encoder, top: tooltipTop, left: tooltipLeft, tooltipData: tooltipData }))));\n    }\n}\nChoroplethMap_ChoroplethMap.defaultProps = defaultProps;\n/* harmony default export */ var chart_ChoroplethMap = __webpack_exports__["default"] = (Object(withTooltip["a" /* default */])(ChoroplethMap_ChoroplethMap));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2484\n')}}]);